<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>example DI Container</title>
  </head>
  <body>
    <form>
      <div>
        <label for="user">User API</label>
        <button data-action="call_user">Call User API</button>
        <button data-action="create_user">Create User API</button>
      </div>
      <div data-view="users"></div>
    </form>
  </body>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.2.1/axios.min.js"></script>
  <script>
    const actions = {
      call_user() {
        console.log('execute: call_user')
        axios.get('/api/users').then((response) => {
          console.log('fetch users', response)
          views.users.data = response.data
          app.renderView()
        })
      },
      create_user() {
        console.log('execute: create_user')
        axios.post('/api/users', { id: 2, name: 'hanako' }).then((response) => {
          console.log('resolve', response)
        })
      }
    }

    const views = {
      users: {
        data: [],
        render(element) {
          while (element.firstChild) {
            element.removeChild(element.firstChild)
          }
          this.data
            .map((user) => {
              const div = document.createElement('div')
              const text = document.createTextNode(user.name.content)
              div.appendChild(text)
              return div
            })
            .forEach((child) => {
              element.appendChild(child)
            })
        }
      }
    }

    const app = {
      triggerAction() {
        document.querySelectorAll('[data-action]').forEach((element) => {
          element.addEventListener(
            'click',
            (ev) => {
              ev.preventDefault()
              const action = element.getAttribute('data-action')
              if (actions[action]) {
                actions[action]()
              }
            },
            false
          )
        })
      },
      renderView() {
        document.querySelectorAll('[data-view]').forEach((element) => {
          const id = element.getAttribute('data-view')
          const renderer = views[id]
          if (!renderer) {
            return
          }
          renderer.render(element)
        })
      }
    }

    app.triggerAction()
    app.renderView()
  </script>
</html>
